<h4 id="chapter2-1-2">
        <p id="title1-2"><i class="fa fa-tags color-red"></i>　<strong class="remarkable">② : Ruby on Rails的资料</strong></p>
        <br>
        我們解释了，Ruby on Rails是<strong><u>随着资料的显示跟保存的方法</u></strong>自己设定要这么样作网站的软件。
        <br>
        我們解释好了资料的显示，呢么<u>资料的保存是这么样做呢？</u>
        <hr class="red-hr">
        <a href="/zh-CN/mugcups/1"><strong>在上章</strong></a>说明了，利用者发信的资料会保存在动网站的机器（服务器）里的资料库里。这个保存资料的资料库在做「资料的保存」。
        <br>
        <%= link_to image_tag("https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/page2/FB_Save_Data.png",
                              :width => "90%",
                              :class => "textbook-title-img hover_img"),
                    "https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/page2/FB_Save_Data.png",
                    :target => ["_blank"] %>
        <br>
        用Facebook的例子的话，
        <br><br>
        <span class="color-red">
        <strong>利用者的投稿</strong>
        <ul style="margin-top:10px;">
            <li><u>投稿的人的名字是</u>「山田太郎」</li>
            <li><u>投稿的內容是</u>「Hello world」</li>
            <li><u>地方是</u>「東京都新宿」</li>
            <li><u>图像是</u>「沒有」</li>
            <li>等等...</li>
        </ul>
        </span>
        <br>
        这样子的资料会保存在<strong><u>动网站的机器（服务器）里的资料库（Excel软件的表）</u></strong>。
        <br><br>
        <strong>在Ruby on Rails上保存下來的资料也是一样，利用者发信的资料会保存在动网站的机器（服务器）里的资料库里，然后这个资料会显示在网页上面。</strong>
        <hr class="red-hr">
        所以在 Ruby on Rails上，首先為了要保存资料<u>作资料库</u>。
        <br>
        之后自己设定<u>资料的新增，编辑，删除</u>。
        <br><br>
        <ul class="number_ul">
            <strong><li>作资料库</li></strong>
                用Facebook的例子说的话，作可以保存名字，內容，地方 等等的资料库（Excel软件的表）。
                <br><br>
            <strong><li>资料库上保存利用者的资料</li></strong>
                新增，编辑，删除在网页上打入的资料。
        </ul>
        <hr class="red-hr">
        <%= render "page2/zh-CN/title1_2_1" %>
        <hr>
        <%= render "page2/zh-CN/title1_2_2" %>
</h4>