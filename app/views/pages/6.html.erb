<% provide :title, "ページを作ろう！②" %>
<div class="row">
  <div class="col-xl-9 col-lg-9 col-md-9 col-sm-9 col-xs-12">
    <div class="textbook-area">
      <div class="textbook-area-inner fadeIn wow">
        <div id="title" class="textbook-title">
          <h1><strong>6 : ページを作ろう！②</strong></h1>
        </div>
        <h4><u><a href="/pages/5" class="text-left ">前の章：ページを作ろう！①</a></u></h4>
        <a href="">
        <%= image_tag "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/header/header6.jpg",
                      :width => "90%",
                      :class => "textbook-title-img hover_img" %>
        </a>
        <h4>
          <strong class="remarkable">この章は、前章の「ページの作成」の続きになります。</strong>
          <br>
          <strong>前章の内容がまだ終わっていない方は、<a href="/pages/5" target="_blank">こちら</a>からお願いします。</strong>
          <hr>
          <% # newページの設定 %>
          <p id="title1-3"><i class="fa fa-tags color-red"></i>　<strong class="remarkable">③ : 新しいデータを記入する（new）</strong></p>
          <br>
          ここまでで<u>「１つのデータの表示（show）」と「全てのデータの表示（index）」</u>をやってみました。
          <br>
          <strong><u>ですが、データを表示させるだけで、追加することができなかったら意味はありませんですよね。</u></strong>
          <br><br>
          ここでページでのデータの作成をやってみましょう。
          <br>
          基本的には「<a href="/pages/4#title2-1" target="_blank"><strong>rails c</strong></a>」でやった
          <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line small-code'>Post.create(:name =&gt; "山田太郎", :content =&gt; "春からSFC", :place =&gt; "新宿")</span>
</td>
</tr>
</table>
          <br>
          を設定する感じだと思ってもらえれば分かりやすいと思います。
          <hr class="red-hr">
          データの作成にはなぜか「new」と「create」の２つがありますが、
          <br>
          <strong><u>「new」でデータを記入する画面を出して、「create」でデータを実際に保存してその保存完了画面を出す</u></strong>流れになります。
          <br><br>
          具体的には、「新しいデータの記入（new）」をするページでデータを入力して「登録する」ボタンを押すと、
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_new_2.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_new_2.png",
                    :target => ["_blank"] %>
        「データを作成（create）」ページに移動して、
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_create_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_create_1.png",
                    :target => ["_blank"] %>
        Sequel Proでデータベースを確認すると、下のようにデータが保存されるようになることを目指します。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Sequel_Pro_myapp_posts_3.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Sequel_Pro_myapp_posts_3.png",
                    :target => ["_blank"] %>
          <br>
          まずはこの「新しいデータを記入する（new）」ページから作っていきましょう。
          <hr>
          <% # new ページの設定/復習 %>
          <p id="title1-3-1"><i class="fa fa-check-square color-red"></i>　<strong>⑴ : ページを設定する</strong></p>
          <br>
          <i class="fa fa-question-circle color-green"></i><strong>　まずは前回の復習です。<u>ページを設定するには３つのことを設定する必要がありました。</u>その設定はなんでしょうか？</strong>
          <br><br>
          その設定は、
          <br>
          <br>
          <strong>
          <ul class="number_ul">
            <li><a href="/pages/5#title1" target="_blank"><u>７つのページ</u></a>のうちどのページを使うかの設定</li>
            →「config > <u>route.rb</u>」の内容を設定
            <br><br>
            <li><u>データの操作</u>の方法を設定</li>
            →「app > controllers > <u>データベース名_controller.rb</u>」の内容を設定
            <br><br>
            <li><u>ページの内容</u>を設定</li>
            →「app > views > <u>ページ名.html.erb</u>」の内容を設定
          </ul>
          </strong>
          <br>
          の３つになります。
          <% # ７つのページの設定（new） %>
          <hr class="red-hr">
          「新しいデータの記入（new）」をするページでは、<u>なにも入っていないデータを作り、そこに内容をいれるためのページの入力欄を作ります。</u>
          <br><br>
          具体的には、
          <br>
          <strong>
          <ul class="number_ul">
            <li>空のデータの作成</li>
            <li>データの記入欄・送信ボタンの設定</li>
            <li>空のデータと記入欄の対応づけ</li>
          </ul>
          </strong>
          をやっていきます。
          <hr class="red-hr">
          では、「７つのページの設定」からやってみましょう！
          <br>
          ７つのページのうちどのページを使うかを決める<strong>「<u>route.rb</u>」ファイル</strong>（configフォルダに入っている）を見てみましょう。
                 <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple remarkable-code'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        内容は前に変更しましたよね。
        <br><br>
        <strong><u>上のように３行目に「new」は追加されていますか？</u></strong>
        <br>
        追加されていれば「新しいデータの記入（new）」をするページを使うことを設定できています。
        <hr class="red-hr">
        では、「<u>データ操作</u>」の設定をしましょう。データ操作は「データベース名_controller.rb」ファイルで設定します。
        <br>
        <strong>「posts」データベースのデータ操作を設定する「posts_controller.rb」ファイルから設定を始めましょう。</strong>
        <br><br>
        まずは「app」フォルダの中にある「controllers」フォルダから、「<strong>posts_controller.rb</strong>」を開きましょう。（Sublime Textの開き方は<a href="/pages/how_to_open" target="_blank"><strong>こちら</strong></a>）
        <br><br>
        開けたら、<u>「def new」と「end」の間</u>を下のように設定しましょう。
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb（12行目を追加）</strong>
        <br>
        <small>※　半角英数字で入力。変更が完了したら「Command」と「s」を一緒に押して内容を保存して下さい。</small>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>11
12
13
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>new</span></span>
<span class='code-line remarkable-code'>    @post = <span class="word-blue">Post</span>.<span class='word-red'>new</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        これで「新しいデータの記入（new）」をするページのデータ操作の設定が完了しました。
        <br><br>
        「new」のデータ操作はこのように、
<pre>
@設定する標識 = データベース名（１文字目大文字の単数形）.new
</pre>
        で設定します。
        <br><br>
        「<i>Post.new</i>」では、<strong>中になにも入っていないデータを作成</strong>しています。
        <br>
        流れとしては、ここで作った空のデータにページで入力させた情報を入れて、それを「データの作成（create）」をするページでデータベースに保存させます。
        <br>
        <small>※　設定する標識は、htmlファイルで同じものを指定できればなんでも大丈夫です。</small>
        <br><br>
        ページでは、この空のデータに内容を入力させる入力欄を作ります。
        <br><br>
        <i class="fa fa-question-circle color-green"></i><strong>　「foods」データベースの「新しいデータの記入（new）」をするためのデータ操作を書いてみましょう。</strong>
        <br><br>
        <textarea class="form-control input-code" placeholder="答えを入力して下さい" rows="3"></textarea>
        <br>
        <i class="fa fa-file color-red"></i><strong>　foods_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content answer-code'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>new</span></span>
<span class='code-line'>    @food = <span class="word-blue">Food</span>.<span class='word-red'>new</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <hr class="red-hr">
        では、ページの設定をしましょう。
        <br>
        ここでは下のような内容を記入させる画面を設定します。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_new_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_new_1.png",
                    :target => ["_blank"] %>
        まずは、Sublime Textで開いた「myapp」で<strong>「<i>app > views > posts</i>」</strong>を開いてみましょう。
        <br>
        その中に<strong>「<u>new.html.erb</u>」</strong>ファイルはあるでしょうか？あったら開きましょう！
        <br><br>
        <strong>このファイルに「新しいデータの記入（new）」をするページを表示する設定を、追加していきます。</strong>
        <br><br>
        <u>では、ページの設定をやってみましょう！</u>
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　new.html.erb</strong>
        <br>
        <small>※　半角英数字で入力。変更が完了したら「Command」と「s」を一緒に押して内容を保存して下さい。</small>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
11
12
13
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を作る&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;%= form_for @post <span class="word-red">do</span> |f| %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:name</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_area <span class='word-purple'>:content</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:place</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>  &lt;%= f.submit <span class='word-yellow'>"登録する"</span> %&gt;</span>
<span class='code-line'>&lt;% <span class='word-red'>end</span> %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        一回、「<u>rails s</u>」で動かしたサーバーを<u>「Command」と「c」を一緒に押して止めて</u>から、もう一度「<u>rails s</u>」を入力して下さい。
        <br>
        これで内容の変更が適用されます。
        <br><br>
        できたらブラウザで、「<a href="http://localhost:3000/posts/new" target="_blank"><strong>localhost:3000/posts/new</strong></a>」を開いてみて下さい。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_new_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_new_1.png",
                    :target => ["_blank"] %>
        上のような入力欄があるページはでてきたでしょうか？
        <hr class="red-hr">
        上のような<strong>「<u>localhost:3000/データベース名/new</u>」</strong>が、<strong>「<u>新しいデータの記入（new）</u>」</strong>をするページになります。
        <br><br>
        今回は「posts」データベースの「新しいデータの記入（new）」をするページなので、
        <br><br>
        <i class="fa fa-chrome color-red"></i><strong>　ブラウザ</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line small-code'>localhost:3000/posts/new</span>
</td>
</tr>
</table>
        <br>
        のようにブラウザで入力しました。
        <br><br>
        <i class="fa fa-question-circle color-green"></i><strong>　では、<u>「tweets」データベースの「新しいデータの記入（new）」をするページ</u>をブラウザで開くにはどのように入力すればいいのでしょうか？</strong>
        <br><br>
        <input type="input" class="form-control input-code" placeholder="答えを入力して下さい">
        <br>
        <i class="fa fa-chrome color-red"></i><strong>　ブラウザ</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content answer-code'><span class='code-line small-code'>localhost:3000/tweets/new</span>
</td>
</tr>
</table>
        <hr class="red-hr">
        では、ページを設定したファイルの中身を説明しましょう。
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　new.html.erb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
11
12
13
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を作る&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;%= form_for @post <span class="word-red">do</span> |f| %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:name</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_area <span class='word-purple'>:content</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:place</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>  &lt;%= f.submit <span class='word-yellow'>"登録する"</span> %&gt;</span>
<span class='code-line'>&lt;% <span class='word-red'>end</span> %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        入力欄が実際に表示されたので、
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　new.html.erb（4〜11行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>4
5
6
7
8
9
10
11
</td>
<td class='code-content'><span class='code-line remarkable-code'>  &lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line remarkable-code'>  &lt;%= f.text_field <span class='word-purple'>:name</span> %&gt;</span>
<span class='code-line remarkable-code'>  &lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line remarkable-code'>  &lt;%= f.text_area <span class='word-purple'>:content</span> %&gt;</span>
<span class='code-line remarkable-code'>  &lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line remarkable-code'>  &lt;%= f.text_field <span class='word-purple'>:place</span> %&gt;</span>
<span class='code-line remarkable-code'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line remarkable-code'>  &lt;%= f.submit <span class='word-yellow'>"登録する"</span> %&gt;</span>
</td>
</tr>
</table>
        <br>
        で、<u>入力欄３つとボタン１つが設定された</u>のはなんとなく推測できるのではないかと思います。
        <br>
        実際その通りで、例えば中にある
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>5
</td>
<td class='code-content'><span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:name</span> %&gt;</span>
</td>
</tr>
</table>
        <br>
        で<u>「name」をデータベースに保存するための入力欄</u>を作っています。
        <br>
        これと比べると、「content」の入力欄を作っている
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>7
</td>
<td class='code-content'><span class='code-line'>  &lt;%= f.text_area <span class='word-purple'>:content</span> %&gt;</span>
</td>
</tr>
</table>
        <br>
        は少し内容が違いますね。
        <br>
        これは入力欄の表示は、データベースの枠組みの設定をした時（<a href="/pages/4#title1-2" target="_blank"><strong>ここらへん</strong></a>を参照）の<u>データの種類に応じた表記になっている</u>からです。
        <br><br>
        この<strong><u>「posts」のデータベースでは「name」は短い文字列・「content」は長い文字列・「place」は短い文字列を入れる設定</u></strong>をしましたよね？
        <br><br>
        <i class="fa fa-arrow-right color-red"></i>　入力欄もそれに応じた設定をしていきます。
        <br><br>
        短い文字列を入れる入力欄は、
<pre>
&lt;%= f.text_field :枠組みの名前 %&gt;
</pre>
        長い文字列を入れる入力欄は、
<pre>
&lt;%= f.text_area :枠組みの名前 %&gt;
</pre>
        数字を入れる入力欄は、
<pre>
&lt;%= f.number_field :枠組みの名前 %&gt;
</pre>
        で設定します。
        <br><br>
        <i class="fa fa-question-circle color-green"></i><strong>　<u>数字を入力する「price」の入力欄</u>はどのように設定すればいいのでしょうか？</strong>
        <br><br>
        <input type="input" class="form-control input-code" placeholder="答えを入力してください">
        <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content answer-code'><span class='code-line'>  &lt;%= f.number_field <span class='word-purple'>:price</span> %&gt;</span>
</td>
</tr>
</table>
        <hr class="red-hr">
        ここまでで、表示された３つの入力欄について説明しました。
        <br>
        <u>もう１つ表示された「登録する」ボタンについて説明します。</u>
        <br>
        このボタンは、
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>  &lt;%= f.submit <span class='word-yellow'>"登録する"</span> %&gt;</span>
</td>
</tr>
</table>
        <br>
        で表示させています。
        <br>
        <strong>このボタンをクリックすると「データの作成（create）」をするページに移動して、入力された情報をデータベースに保存します。</strong>
        <br>
        <small>※　まだ「データの作成（create）」をするページのデータ操作を設定していないので、データベースにデータは保存されませんが（実際にやってみて、<a href="/pages/how_to_open#title2" target="_blank"><strong>Sequel Pro</strong></a>で確認してみてください）</small>
        <hr class="red-hr">
        ここまでで、入力欄とボタンの表示の説明をしました。
        <br>
        ではまだ説明していない<u>3、12行目はなにをしているのでしょうか？</u>
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　new.html.erb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
11
12
13
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を作る&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line remarkable-code'>&lt;%= form_for @post <span class="word-red">do</span> |f| %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:name</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_area <span class='word-purple'>:content</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:place</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>  &lt;%= f.submit <span class='word-yellow'>"登録する"</span> %&gt;</span>
<span class='code-line remarkable-code'>&lt;% <span class='word-red'>end</span> %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>new</span></span>
<span class='code-line'>    @post = <span class='word-blue'>Post</span>.<span class='word-red'>new</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        <strong>この３行目は、「<u>posts_controller.rb</u>」の「<u>Post.new</u>」で新しく作った空のデータ「<u>@post</u>」を受け取って、「<u>&lt;% end %&gt;</u>」の間にある入力欄と空のデータ「<u>@post</u>」を対応づけています。</strong>
        <br><br>
        この対応づけのために、「@post」を一回「f」という標識に置き換えています。
        <br>
        <small>※　対応づけるだけなら「@post」をそのまま使ってもいいような気もしますが、ここは仕様なので覚えて下さい</small>
        <br>
        <small>※　対応づけのための標識に「f」を使っていますが、これは<strong><u>「form」の頭文字をとった</u></strong>ものだけのことなので他の好きな名前にしても構いません。</small>
        <hr class="red-hr">
        では、設定の方法を説明しましょう。
        <br>
        <strong>「新しいデータの記入（new）」をするページでは、「<u>posts_controller.rb</u>」で作った「<u>Post.new</u>」の空のデータをページに対応づける必要があります。</strong>
        <br><br>
        この空のデータのページへの対応づけは、
<pre>
&lt;%= form_for @設定した標識 do |好きな名前| %&gt;
</pre>
        で行います。
        <br>
        <small>※　「&lt;%=」で「&lt;%」でないので注意</small>
        <br><br>
        対応づけしたデータは、
<pre>
&lt;% end %&gt;
</pre>
        までの間で入力欄と作成をするためのボタンを設定します。
        <br><br>
        中に設定する入力欄は、例えば短い文字列だったら、
<pre>
&lt;%= 名前.text_field :枠組みの名前 %&gt;
</pre>
        で設定します。
        <br>
        <small>※　長い文字列の場合は<strong>「<u>f.text_area</u>」</strong>で、数字の場合は<strong>「<u>f.number_field</u>」</strong>で設定します。</small>
        <br><br>
        「データを作成（create）」するページへ移動するためのボタンは、
<pre>
&lt; f.submit "文字列" %&gt;
</pre>
        で設定します。
        <hr class="red-hr">
        <i class="fa fa-question-circle color-green"></i>　<strong>下のようにデータ操作をした「<u>@stock</u>」の<u>名前「name（短い文字列）」</u>と<u>持ち主「user（短い文字列）」</u>と<u>価格「price（数字）」</u>を記入するページを設定してみましょう。</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>stocks_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>new</span></span>
<span class='code-line'>    @stock = <span class="word-blue">Stock</span>.<span class='word-red'>new</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        <textarea class="form-control input-code" placeholder="答えを入力して下さい" rows="13"></textarea>
        <br>
        <i class="fa fa-file color-red"></i>　<strong>new.html.erb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
</td>
<td class='code-content answer-code'><span class='code-line'>&lt;%= form_for @stock <span class="word-red">do</span> |f| %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:name</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;持ち主&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:user</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;値段&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.number_field <span class='word-purple'>:price</span> %&gt;</span>
<span class='code-line'>&lt;% <span class="word-red">end</span> %&gt;</span>
</td>
</tr>
</table>
        <hr>
        <p id="title1-3-2"><i class="fa fa-check-square color-red"></i>　<strong>⑵ : まとめ</strong></p>
        <strong>「新しいデータの記入（new）」をする</strong>ページの３つの設定をまとめる。
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>７つのページの設定</strong>
        <br><br>
        <strong>「config」フォルダの中にある「route.rb」ファイルに「<u>new</u>」を設定する</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line remarkable-code'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>データ操作の設定</strong>
        <br><br>
        <strong>「app > controllers」フォルダにある「データベース名_controller」ファイルの「<u>new</u>」を設定する</strong>
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>new</span></span>
<span class='code-line remarkable-code'>    @post = <span class='word-blue'>Post</span>.new</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        <strong><u>空のデータを作るデータ操作「.new」と、htmlで表示させる標識</u>を設定する</strong>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>ページ設定</strong>
        <br><br>
        <strong>「app > views」フォルダ内にある「データベース名」のファルダの中にある、「<u>new.html.erb</u>」に内容を設定していく。</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>new.html.erb（3〜12行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
11
12
13
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を作る&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line remarkable-code'>&lt;%= form_for @post do |f| %&gt;</span>
<span class='code-line remarkable-code'>  &lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line remarkable-code'>  &lt;%= f.text_field <span class='word-purple'>:name</span> %&gt;</span>
<span class='code-line remarkable-code'>  &lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line remarkable-code'>  &lt;%= f.text_area <span class='word-purple'>:content</span> %&gt;</span>
<span class='code-line remarkable-code'>  &lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line remarkable-code'>  &lt;%= f.text_field <span class='word-purple'>:place</span> %&gt;</span>
<span class='code-line remarkable-code'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line remarkable-code'>  &lt;%= f.submit <span class='word-yellow'>"登録する"</span> %&gt;</span>
<span class='code-line remarkable-code'>&lt;% end %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts" target="_blank"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        ページでは、<strong><u>「controller」ファイルで作った空のデータに内容を加える入力欄の設定をします。</u></strong>
        <br><br>
        <strong>「<u>&lt;%= form_for @設定した標識 do |好きな名前| %&gt;</u>」</strong>で空のデータを指定して、<strong>「<u>&lt;% end %&gt;</u>」</strong>との間に<u>データの入力欄と「データを作成（create）」するボタンを作ります。</u>
        <br><br>
        <strong>「<u>&lt;%= 名前.入力欄 :枠組みの名前 %&gt;</u>」</strong>でデータの入力欄を作り、
        <br>
        <strong>「<u>&lt;%= 名前.submit "表示する文字列" %&gt;</u>」</strong>で「データを作成（create）」するボタンを作ります。
        <br>
        <small>※　短い文字列は「名前.text_field」で、長い文字列ば「名前.text_area」で、数字は「名前.number_field」で設定する</small>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>ブラウザでの表示</strong>
        <br><br>
        設定が完了したら<strong>ターミナルで「rails s」をした後で</strong>、ブラウザでページを開く。
        <br>
        「新しいデータの記入（create）」をするページは、<strong>「<u>locahost:3000/データベース名/new</u>」</strong>で開く。
        <hr class="red-hr">
        ここまででデータの記入をするページを作りました。
        <br>
        <strong>次は、入力された「データの作成（create）」をするページを作りましょう。</strong>
        <hr>
        </h4>

        <% #title1-4 %>

        <h4>
        <p id="title1-4"><i class="fa fa-tags color-red"></i>　<strong class="remarkable">④ : データを作成する（create）</strong></p>
        <br>
        ここまでで「新しいデータの記入（new）」が終わりました。
        <br>
        <strong>データの入力はできるようになったのですが、このままだとまだデータの保存ができません。</strong>
        <br>
        このデータの保存をやってみましょう！
        <br><br>
        今回の内容は、<a href="/pages/4#title2-1" target="_blank"><strong>第４章</strong></a>でやった
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line small-code'>Post.create(:name =&gt; "山田太郎", :content =&gt; "春からSFC", :place =&gt; "新宿")</span>
</td>
</tr>
</table>
        <br>
        をデータ操作の部分（<i>posts_controller.rb</i>）で設定する、と考えてもらえれば分かりやすいと思います。
        <br>
        <strong>
        「新しいデータの記入（new）」をするページからデータを受け取って、それを上のようなデータ操作で保存します。
        </strong>
        <br>
        <small>※　データは「新しいデータの記入（new）」をするページから移動するので、ブラウザにURLを入力する必要はありません。</small>
        <br><br>
        具体的には、
        <br>
        <strong>
        <ul class="number_ul">
          <li>「新しいデータの記入（new）」をするページから来た情報にそったデータ作成</li>
          <li>データ作成完了のページの設定</li>
        </ul>
        </strong>
        をやっていきます。
        <br><br>
        では、「７つのページの設定」「データ操作の設定」と「ページ内容の設定」をそれぞれやっていきましょう！
        <hr>
        <p id="title1-4-1"><i class="fa fa-check-square color-red"></i>　<strong>⑴ : ページを設定する</strong></p>
        <br>
        まずは<strong>「<u>７つのページのうち、どのページを使うか</u>」</strong>の設定をします。
         <br><br>
         ７つのページのうちどのページを使うかを決める<strong>「<u>route.rb</u>」ファイル</strong>（configフォルダにある）を見てみましょう。
                 <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line remarkable-code'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        内容は前に変更しましたよね。
        <br><br>
        <strong><u>上のように「create」を追加した</u></strong>と思います。これで「データを作成（create）」するページを使うことを設定できました。
        <hr class="red-hr">
        では、「<u>データ操作</u>」の設定をしましょう。データ操作は「データベース名_controller.rb」ファイルで設定します。
        <br>
        <strong>「posts」データベースのデータ操作を設定する「posts_controller.rb」ファイルから設定を始めましょう。</strong>
        <br><br>
        まずは「app」フォルダの中にある「controllers」フォルダから、「<strong>posts_controller.rb</strong>」を開きましょう。（Sublime Textの開き方は<a href="/pages/how_to_open" target="_blank"><strong>こちら</strong></a>）
        <br><br>
        開けたら、<u>「def create」と「end」の間</u>を下のように設定しましょう。
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>posts_controller.rb（16行目を追加）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>15
16
17
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>create</span></span>
<span class='code-line'>    @post = <span class='word-blue'>Post</span>.create(params.<span class="word-red">require</span>(<span class='word-purple'>:post</span>).permit(<span class='word-purple'>:name</span>, <span class='word-purple'>:content</span>, <span class='word-purple'>:place</span>))</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        今回は少し内容が複雑ですね。
        <br>
        「<u>@post</u>」がhtmlファイルで表示させる時に標識、「<u>Post.create</u>」でデータを作っているのはわかると思うので、
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>params.<span class='word-red'>require</span>(<span class='word-purple'>:post</span>).permit(<span class='word-purple'>:name</span>, <span class='word-purple'>:content</span>, <span class='word-purple'>:place</span>)</span>
</td>
</tr>
</table>
        <br>
        の部分が少し分からないと思います。
        <br><br>
        実は「新しいデータの記入（new）」をしたページから送られた、例えば「<u>nameは'山田太郎'、contentは'春からSFC'、placeは'新宿'</u>」のようなデータは、全てこの<strong>「params」</strong>の部分に集約されています。
        <br><br>
        なのでこの<strong>「params」</strong>が、
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line small-code'>(<span class='word-purple'>:name</span> => <span class='word-yellow'>"入力された内容"</span>, <span class='word-purple'>:content</span> => <span class='word-yellow'>"入力された内容"</span>, <span class='word-purple'>:place</span> => <span class='word-yellow'>"入力された内容"</span>)</span>
</td>
</tr>
</table>
        <br>
        を示しています。
        <br><br>
        その後ろの
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>.<span class='word-red'>require</span>(<span class='word-purple'>:post</span>).permit(<span class='word-purple'>:name</span>, <span class='word-purple'>:content</span>, <span class='word-purple'>:place</span>)</span>
</td>
</tr>
</table>
        <br>
        では、<strong>「<u>postsのデータベースのname、content、placeの値以外は保存しない</u>」</strong>ことを設定しています。
        <br>
        これはセキュリティー上、他のデータを改ざんされたりされるのを防ぐための設定になります。<strong><u>セキュリティーのために必要と思って下さい。</u></strong>
        <br><br>
        「require」の後ろに変更する「:データベース名（単数形）」、「permit」の後ろに作成する「:枠組みの名前」を設定します。
        <br><br>
        まとめると、
<pre>
@設定する標識 = データベース名(１文字目大文字・単数形).create(params.require(:単数形データベース名).permit(:枠組みの名前...あるだけ))
</pre>
        こんな感じになりますが、<u>覚える必要はないので適宜コピペしてきて下さい。</u>
        <br><br>
        <i class="fa fa-question-circle color-green"></i><strong>　<u>「tweets」データベースの「name」「content」「place」の「データを作成（create）」</u>するページのデータ操作はどのように設定するのでしょうか？</strong>
        <br><br>
        <input type="input" class="input-code form-control" placeholder="答えを入力して下さい">
        <br>
        <i class="fa fa-file color-red"></i><strong>　tweets_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content answer-code'><span class='code-line small-code'><span class='word-blue'>Tweet</span>.create(params.permit(<span class='word-purple'>:tweet</span>).permit(<span class='word-purple'>:name</span>, <span class='word-purple'>:content</span>, <span class='word-purple'>:place</span>))</span>
</td>
</tr>
</table>
        <hr class="red-hr">
        データ操作はここまでなので、<strong><u>ページの設定をやってみましょう！</u></strong>
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_create_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_create_1.png",
                    :target => ["_blank"] %>
        このようなページができるようにします。
        <br><br>
        まずは、Sublime Textで開いた「myapp」で<strong>「<i>app > views > posts</i>」</strong>を開いてみましょう。
        <br>
        その中に<strong>「<u>create.html.erb</u>」</strong>ファイルはあるでしょうか？あったら開きましょう！
        <br><br>
        <strong>このファイルに「データを作成（create）」するページを表示する設定を追加していきます。</strong>
        <br><br>
        では、この「create.html.erb」を下のように変更してみましょう！
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　create.html.erb</strong>
        <br>
        <small>※　半角英数字で入力。変更が完了したら「Command」と「s」を一緒に押して内容を保存して下さい。</small>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿が完了しました&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.name %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.content %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.place %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        内容が変更できたら、ターミナルで「<u>myapp</u>」に移動してから<strong>「<i>rails s</i>」</strong>でサーバを立ち上げて、「<a href="http://localhost:3000/posts/new" target="_blank"><strong>localhost:3000/posts/new</strong></a>」を開いてみましょう！
        <br><br>
        データの入力欄のページは表示されると思うで、そこで好きなデータを入力してみて「登録する」ボタンを押してみて下さい。
        <br>
        下のように「投稿が完了しました」の画面に移動できたでしょうか？
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_create_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_create_1.png",
                    :target => ["_blank"] %>
        移動ができたら、<a href="/pages/how_to_open#title2" target="_blank"><strong>Sequel Pro</strong></a>で中身を確認してみましょう！
        <br>
        データは保存できているでしょうか？
        <hr class="red-hr">
        ページの内容は分かりやすいですよね。
        <br>
        「<a href="/pages/5#title1"><strong>show.html.erb</strong></a>」にあった、
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>&lt;%= @post.name %&gt;</span>
</td>
</tr>
</table>
        <br>
        と同じような感じで作成したデータを表示させています。
        <br><br>
        今回の「@post」は、
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>@post = <span class='word-blue'>Post</span>.create(params.<span class="word-red">require</span>(<span class='word-purple'>:post</span>).permit(<span class='word-purple'>:name</span>, <span class='word-purple'>:content</span>, <span class='word-purple'>:place</span>))</span>
</td>
</tr>
</table>
        <br>
        と今回は「find(idの番号)」とデータを選択しているわけではありませんが、<u>「create」でもデータを表示することができる</u>ので覚えて下さい。
        <hr>
        </h4>
        <h4>
        <p id="title1-4-2"><i class="fa fa-check-square color-red"></i>　<strong>⑵ : まとめ</strong></p>
        <strong>「データの作成（create）」</strong>をするページの３つの設定をまとめる。
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>７つのページの設定</strong>
        <br><br>
        <strong>「config」フォルダの中にある「route.rb」ファイルに「<u>create</u>」を設定する</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line remarkable-code'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>データ操作の設定</strong>
        <br><br>
        <strong>「app > controllers」フォルダにある「データベース名_controller」ファイルの「<u>create</u>」を設定する</strong>
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>create</span></span>
<span class='code-line remarkable-code'>    @post = <span class='word-blue'>Post</span>.create(params.<span class="word-red">require</span>(<span class='word-purple'>:post</span>).permit(<span class='word-purple'>:name</span>, <span class='word-purple'>:content</span>, <span class='word-purple'>:place</span>))</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        <strong><u>新しいデータを作る「create」の中に、データベースの指定（require）と枠組みの指定（permit）</u>を設定します。</strong>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>ページ設定</strong>
        <br><br>
        <strong>「app > views」フォルダ内にある「データベース名」のファルダの中にある、「<u>create.html.erb</u>」に内容を設定していく。</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>create.html.erb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿が完了しました&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.name %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.content %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.place %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        <strong><u>なにも書かなくてもデータの作成は行えますが、使う人にとって不便なのでちゃんと設定しましょう！</u></strong>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>ブラウザでの表示</strong>
        <br><br>
        <strong>「データの作成（create）」をするページは、「新しいデータの記入（new）」のボタンを押して移動してくるページなので、URLを記入する必要はありません。</strong>
        <br>
        <small>※　ページのURLは、「localhost:3000/posts」になっていると思います。</small>
        <hr class="red-hr">
        ここまでで、データの作成をするページを作りました。
        <br>
        <strong>次は、「データの変更」をするページを設定してみましょう！</strong>
        <hr>
        </h4>
        <h4>
        <p id="title1-5"><i class="fa fa-tags color-red"></i>　<strong class="remarkable">⑤ : 編集するデータの記入(edit)</strong></p>
        <br>
        <u>「１つのデータの表示（show）」「全てのデータの表示（index）」「新しいデータの記入（new）」「データの作成（create）」</u>をする４つのページをここまでで作りました。
        <br><br>
        <strong>残っているデータ操作は、「データの変更」と「データの削除」をするページのみになります。</strong>
        <br>
        まずは「データの変更」からやってみましょう！
        <br><br>
        データの変更は「<a href="/pages/4#title2-2" target="_blank"><strong>rails c</strong></a>」でやった、
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line small-code'>Post.find(1).update(:content =&gt; "SFC入学式")</span>
</td>
</tr>
</table>
        <br>
        をデータ操作の部分で設定していきます。
        <hr class="red-hr">
        データの変更もデータの作成と同じように、「編集するデータの記入（edit）」と「データの変更（update）」の2つがあります。
        <br>
        <strong><u>「edit」でデータを記入する画面を出し、「update」で入力された情報をデータベースに保存する</u></strong>流れになります。
        <br><br>
        具体的には、「編集するデータの記入（edit）」をするページでデータを入力して「変更する」ボタンを押すと、
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_edit_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_edit_1.png",
                    :target => ["_blank"] %>
        「データの変更（update）」ページに移動して、
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_update_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_update_1.png",
                    :target => ["_blank"] %>
        変更したデータのページ「localhost:3000/posts/idの番号」をブラウザで開いて、変更ができたかを確認します。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_edited.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_edited.png",
                    :target => ["_blank"] %>
        まずはこの「編集するデータの記入する（edit）」ページから作っていきましょう！
        <hr>
        <p id="title1-5-1"><i class="fa fa-check-square color-red"></i>　<strong>⑴ : ページを設定する</strong></p>
        <br>
        <i class="fa fa-question-circle color-green"></i>　<strong>復習から始めます。ページを設定するには、どの設定が必要なのでしょうか？</strong>
        <br><br>
        <u>⑴ : どのページを使うかの設定 ⑵ : データ操作の設定 ⑶ : ページ内容の設定</u>
        <br>
        の３つになります。
        <hr class="red-hr">
        「編集するデータの記入（edit）」をするページでは、変更するデータを指定してページの入力欄を作ります。
        <br><br>
        具体的には、
        <br>
        <strong>
        <ul class="number_ul">
          <li>変更するデータの選択</li>
          <li>データの記入欄・送信ボタンの設定</li>
          <li>変更するデータと記入欄の対応づけ</li>
        </ul>
        </strong>
        をやっていきます
        <hr class="red-hr">
          では、「７つのページの設定」からやってみましょう！
          <br>
          ７つのページのうちどのページを使うかを決める<strong>「<u>route.rb</u>」ファイル</strong>（configフォルダに入っている）を見てみましょう。
                 <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line remarkable-code'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        内容は前に変更しましたよね。
        <br><br>
        <strong><u>上のように３行目に「edit」は追加されていますか？</u></strong>
        <br>
        追加されていれば「編集するデータの記入（edit）」をするページを使うことを設定できています。
        <hr class="red-hr">
        では、「<u>データ操作</u>」の設定をしましょう。データ操作は「データベース名_controller.rb」ファイルで設定します。
        <br>
        <strong>「posts」データベースのデータ操作を設定する「posts_controller.rb」ファイルから設定を始めましょう。</strong>
        <br><br>
        まずは「app」フォルダの中にある「controllers」フォルダから、「<strong>posts_controller.rb</strong>」を開きましょう。（Sublime Textの開き方は<a href="/pages/how_to_open" target="_blank"><strong>こちら</strong></a>）
        <br><br>
        開けたら、<u>「def edit」と「end」の間</u>を下のように設定しましょう。
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb（20行目を追加）</strong>
        <br>
        <small>※　半角英数字で入力。変更が完了したら「Command」と「s」を一緒に押して内容を保存して下さい。</small>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>19
20
21
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>edit</span></span>
<span class='code-line remarkable-code'>    @post = <span class='word-blue'>Post</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        <i class="fa fa-question-circle color-green"></i>　<strong>この追加した１行では、なにをしているのでしょうか？</strong>
        <br><br>
        <u>この１行で、変更するデータを選択しています。</u>
        <br><br>
        <i class="fa fa-play-circle color-red"></i>　これは「一つのデータの選択（show）」でやった、
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>show</span></span>
<span class='code-line'>    @post = <span class='word-blue'>Post</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        と全く同じことをやっています。
        <br><br>
        変更するデータはここで選択します。
        <br>
        <strong><u>「編集するデータの記入（edit）」でも忘れずにこのデータの選択をしましょう！</u></strong>
        <br><br>
        <i class="fa fa-question-circle color-green"></i><strong>　「tweets」データベースの「編集するデータの記入（edit）」はどのように設定すればいいのでしょうか？</strong>
        <br><br>
        <textarea class="input-code form-control" placeholder="答えを入力して下さい" rows="3"></textarea>
        <br>
        <i class="fa fa-file color-red"></i><strong>　tweets_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content answer-code'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>edit</span></span>
<span class='code-line'>    @tweet = <span class='word-blue'>Tweet</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <hr class="red-hr">
        では、ページの設定をしましょう。
        <br>
        ここでは下のような内容を記入させる画面を設定します。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_edit_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_edit_1.png",
                    :target => ["_blank"] %>
        まずは、Sublime Textで開いた「myapp」で<strong>「<i>app > views > posts</i>」</strong>を開いてみましょう。
        <br>
        その中に<strong>「<u>edit.html.erb</u>」</strong>ファイルはあるでしょうか？あったら開きましょう！
        <br><br>
        <strong>このファイルに「編集するデータの記入（edit）」をするページを表示する設定を、追加していきます。</strong>
        <br><br>
        <u>では、ページの設定をやってみましょう！</u>
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　edit.html.erb</strong>
        <br>
        <small>※　半角英数字で入力。変更が完了したら「Command」と「s」を一緒に押して内容を保存して下さい。</small>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
11
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を編集する&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;%= form_for @post <span class="word-red">do</span> |f| %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_area <span class='word-purple'>:content</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:place</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>  &lt;%= f.submit <span class='word-yellow'>"変更する"</span> %&gt;</span>
<span class='code-line'>&lt;% <span class="word-red">end</span> %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts/&lt;%= @post.id %&gt;"</span>&gt;投稿に戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        今回の設定もなんとなく見覚えはありませんか？
        <br>
        この章の始めで説明した「<a href="/pages/6#title1-3-1" target="_blank"><strong>new.html.erb</strong></a>」と似ている内容になっていますね。
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　new.html.erb</strong>
        <br>
        <small>※　半角英数字で入力。変更が完了したら「Command」と「s」を一緒に押して内容を保存して下さい。</small>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
11
12
13
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を作る&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;%= form_for @post <span class="word-red">do</span> |f| %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:name</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_area <span class='word-purple'>:content</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:place</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>  &lt;%= f.submit <span class='word-yellow'>"登録する"</span> %&gt;</span>
<span class='code-line'>&lt;% <span class='word-red'>end</span> %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        <i class="fa fa-question-circle color-green"></i><strong>　復習をしましょう。この<u>「new.html.erb」ファイルの中で、「name」の入力欄とボタンを設定している部分</u>はどこでしょうか？</strong>
        <br><br>
        <i class="fa fa-play-circle color-red"></i>　<strong>「name」の入力欄</strong>
        <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content answer-code'><span class='code-line'>&lt;%= f.text_field <span class='word-purple'>:name</span> %&gt;</span>
</td>
</tr>
</table>
        <br>
        <i class="fa fa-play-circle color-red"></i>　<strong>ボタン</strong>
        <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content answer-code'><span class='code-line'>&lt;%= f.submit <span class='word-yellow'>"登録する"</span> %&gt;</span>
</td>
</tr>
</table>
        <hr class="red-hr">
        「new.html.erb」ファイルでは、
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>3
</td>
<td class='code-content'><span class='code-line'>&lt;%= form_for @post <span class="word-red">do</span> |f| %&gt;</span>
</td>
</tr>
</table>
        <p style="margin-top:10px;">と</p>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>12
</td>
<td class='code-content'><span class='code-line'>&lt;% <span class="word-red">end</span> %&gt;</span>
</td>
</tr>
</table>
        <br>
        の間に入力欄とボタンの表示をしました。
        <br><br>
        <i class="fa fa-play-circle color-red"></i><strong>　「edit.html.erb」ファイルでもやっていることは全く同じです。</strong>
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>3
</td>
<td class='code-content'><span class='code-line'>&lt;%= form_for @post <span class="word-red">do</span> |f| %&gt;</span>
</td>
</tr>
</table>
        <p style="margin-top:10px;">と</p>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>10
</td>
<td class='code-content'><span class='code-line'>&lt;% <span class="word-red">end</span> %&gt;</span>
</td>
</tr>
</table>
        <p style="margin-top:10px;">の間にある</p>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>4
5
6
7
8
9
</td>
<td class='code-content'><span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_area <span class='word-purple'>:content</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:place</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>  &lt;%= f.submit <span class='word-yellow'>"変更する"</span> %&gt;</span>
</td>
</tr>
</table>
        <br>
        で、ページを表示させています。
        <br>
        ここでは、「content」と「place」を入力する設定をしています。
        <hr class="red-hr">
        <i class="fa fa-question-circle color-green"></i><strong>　下のデータ操作をした「<u>@user</u>」の<u>名字「family_name（短い文字列）」</u>と<u>名前「first_name（長い文字列）」</u>と<u>年齢「age（数字）」</u>を記入するページを設定してみましょう。</strong>
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　users_controller.rb</strong>
        <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>edit</span></span>
<span class='code-line'>    @user = <span class='word-blue'>User</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        <textarea class="input-code form-control" placeholder="答えを入力して下さい" rows="15"></textarea>
        <br>
        <i class="fa fa-file color-red"></i><strong>　edit.html.erb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
11
12
13
</td>
<td class='code-content answer-code'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を編集する&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;%= form_for @user <span class="word-red">do</span> |f| %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;名字&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:family_name</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:first_name</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;年齢&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.number_field <span class='word-purple'>:age</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>  &lt;%= f.submit <span class='word-yellow'>"変更する"</span> %&gt;</span>
<span class='code-line'>&lt;% <span class="word-red">end</span> %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts/&lt;%= @post.id %&gt;"</span>&gt;投稿に戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <hr class="red-hr">
        では、ページを表示させてみましょう！
        <br>
        一回、「<u>rails s</u>」で動かしたサーバーを<u>「Command」と「c」を一緒に押して止めて</u>から、もう一度「<u>rails s</u>」を入力して下さい。
        <br>
        これで内容の変更が適用されます。
        <br><br>
        できたらブラウザで、「<a href="/posts/1/edit" target="_blank"><strong>localhost:3000/posts/1/edit</strong></a>」を入力して下さい。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_edit_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_edit_1.png",
                    :target => ["_blank"] %>
        上のような入力欄のあるページが出てきたでしょうか？
        <hr class="red-hr">
        上のような<strong>「<u>localhost:3000/データベース名/idの番号/edit</u>」</strong>で、<strong>「<u>編集するデータの入力（edit）</u>」</strong>をするページをブラウザで開きます。
        <br><br>
        今回は「posts」データベースの「idが1」のデータベースの内容を記入するページだったので、
        <br><br>
        <i class="fa fa-chrome color-red"></i>　<strong>ブラウザ</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line small-code'>localhost:3000/posts/1/edit</span>
</td>
</tr>
</table>
        <br>
        で開きました。
        <br><br>
        <i class="fa fa-question-circle color-green"></i><strong>　<u>「videos」データベースの「編集するデータの入力」をするページ</u>をブラウザで開くにはどのように入力すればいいのでしょうか？</strong>
        <br><br>
        <input type="input" class="input-code form-control" placeholder="答えを入力して下さい">
        <br>
        <i class="fa fa-chrome color-red"></i><strong>　ブラウザ</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content answer-code'><span class='code-line small-code'>localhost:3000/posts/1/edit</span>
</td>
</tr>
</table>
        <hr>
        <p id="title1-5-2"><i class="fa fa-tags color-red"></i>　<strong>⑵ : まとめ</strong></p>
        <strong>「編集するデータの記入（edit）」</strong>ページの３つの設定をまとめる。
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>７つのページの設定</strong>
        <br><br>
        <strong>「config」フォルダの中にある「route.rb」ファイルに「<u>edit</u>」を設定する</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line remarkable-code'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>データ操作の設定</strong>
        <br><br>
        <strong>「app > controllers」フォルダにある「データベース名_controller」ファイルの「<u>edit</u>」を設定する</strong>
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>edit</span></span>
<span class='code-line remarkable-code'>    @post = <span class='word-blue'>Post</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        <strong><u>編集するデータを選択する「.find(params[:id])」と、htmlで表示させる標識</u>を設定する</strong>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>ページ設定</strong>
        <br><br>
        <strong>「app > views」フォルダ内にある「データベース名」のファルダの中にある、「<u>edit.html.erb</u>」に内容を設定していく。</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>edit.html.erb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
11
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を編集する&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;%= form_for @post <span class="word-red">do</span> |f| %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_area <span class='word-purple'>:content</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;%= f.text_field <span class='word-purple'>:place</span> %&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>  &lt;%= f.submit <span class='word-yellow'>"変更する"</span> %&gt;</span>
<span class='code-line'>&lt;% <span class="word-red">end</span> %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts/&lt;%= @post.id %&gt;"</span>&gt;投稿に戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        ページでは、<strong><u>「controller」ファイルで選択したデータの内容を変更する入力欄の設定と選択したデータを表示する設定</u>をします。</strong>
        <br><br>
        <strong>「<u>&lt;%= form_for @設定した標識 do |好きな名前| %&gt;</u>」</strong>で空のデータを指定して、<strong>「<u>&lt;% end %&gt;</u>」</strong>との間に<u>データの入力欄と「データを変更（update）」するボタンを作ります。</u>
        <br><br>
        <strong>「<u>&lt;%= 名前.入力欄 :枠組みの名前 %&gt;</u>」</strong>でデータの入力欄を作り、
        <br>
        <strong>「<u>&lt;%= 名前.submit "表示する文字列" %&gt;</u>」</strong>で「データを変更（update）」するボタンを作ります。
        <br>
        <small>※　短い文字列は「名前.text_field」で、長い文字列は「名前.text_area」で、数字は「名前.number_field」で設定する</small>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>ブラウザでの表示</strong>
        <br><br>
        設定が完了したら<strong>ターミナルで「rails s」をした後で</strong>、ブラウザでページを開く。
        <br>
        「編集したデータの入力」をするページは、<strong>「<u>locahost:3000/データベース名/idの番号/edit</u>」</strong>で開く。
        <hr class="red-hr">
        ここまでで、「編集するデータの記入（edit）」をするページを作りました。
        <br>
        <strong>次は、入力された「データの変更（update）」するページを作りましょう。</strong>
        <hr>
        </h4>
        <h4>
          <p id="title1-6"><i class="fa fa-tags color-red"></i>　<strong class="remarkable">⑥ : データの変更をする（update）</strong></p>
          <br>
          ここまでで「編集するデータの記入（edit）」を設定しました。
          <br>
          <strong>これも「データの作成（create）」と同じように、データを記入するだけではなくデータを変更をするページが必要になります。</strong>
          <br>
          ここでは、そのデータの変更をやってみましょう！
          <br><br>
          今回の内容は、<a href="/pages/4#title2-2" target="_blank"><strong>第4章</strong></a>でやった
          <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line small-code'>Post.find(1).update(:content =&gt; "SFC入学式")</span>
</td>
</tr>
</table>
        <br>
        をデータ操作の部分（<i>posts_controller.rb</i>）で設定する、と考えてもらえれば分かりやすいと思います。
        <strong>
        「編集するデータの記入（edit）」をするページからデータを受け取って、それを上のようなデータ操作で変更します。
        </strong>
        <br>
        <small>※　データは「編集するデータの記入（edit）」をするページから移動するので、ブラウザにURLを入力する必要はありません。</small>
        <br><br>
        具体的には、
        <strong>
        <ul class="number_ul">
          <li>「編集するデータの記入（edit）」をするページから来た情報にそったデータ変更</li>
          <li>データ変更完了のページの設定</li>
        </ul>
        </strong>
        をやっていきます。
        <br><br>
        では、「７つのページの設定」「データ操作の設定」と「ページ内容の設定」をそれぞれやっていきましょう！
        <hr>
        <p id="title1-6-1"><i class="fa fa-check-square color-red"></i>　<strong>⑴ : ページを設定する</strong></p>
        <br>
        まずは<strong>「<u>７つのページのうち、どのページを使うか</u>」</strong>の設定をします。
         <br><br>
         ７つのページのうちどのページを使うかを決める<strong>「<u>route.rb</u>」ファイル</strong>（configフォルダにある）を見てみましょう。
                 <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line remarkable-code'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        内容は前に変更しましたよね。
        <br><br>
        <strong><u>上のように「update」を追加した</u></strong>と思います。これで「データを作成（update）」するページを使うことを設定できました。
        <hr class="red-hr">
        では、「<u>データ操作</u>」の設定をしましょう。データ操作は「データベース名_controller.rb」ファイルで設定します。
        <br>
        <strong>「posts」データベースのデータ操作を設定する「posts_controller.rb」ファイルから設定を始めましょう。</strong>
        <br><br>
        まずは「app」フォルダの中にある「controllers」フォルダから、「<strong>posts_controller.rb</strong>」を開きましょう。（Sublime Textの開き方は<a href="/pages/how_to_open" target="_blank"><strong>こちら</strong></a>）
        <br><br>
        開けたら、<u>「def update」と「end」の間</u>を下のように設定しましょう。
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>posts_controller.rb（24、25行目を追加）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>23
24
25
26
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>update</span></span>
<span class='code-line remarkable-code'>    @post = <span class='word-blue'>Post</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line remarkable-code'>    @post.update(params.<span class="word-red">require</span>(<span class='word-purple'>:post</span>).permit(<span class='word-purple'>:content</span>, <span class='word-purple'>:place</span>))</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        今回追加した２行もどこかで見たことがある設定ですね。
        <br>
        １行目の<strong>「<u>@post = Post.find(params[:id])</u>」</strong>は、<a href="/pages/5#title1-1-1" target="_blank"><strong>「１つのデータの表示（show）」</strong></a>をするページや<a href="/pages/6#title1-5-1" target="_blank"><strong>「編集するデータの入力（edit）」</strong></a>をするページで使いました。
        <br><br>
        <i class="fa fa-question-circle color-green"></i>　<strong>では、２行目はなにをしているのでしょうか？</strong>
        <br><br>
        この２行目では、選択したデータ「<u>@post</u>」を入力されたデータ「<u>params</u>」に「<u>変更（update）</u>」しています。
        <hr class="red-hr">
        <strong><a href="/pages/6#title1-4-1" target="_blank">「データの作成」</a></strong>の部分で似た設定がありましたね。
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>create</span></span>
<span class='code-line remarkable-code'>    @post = <span class='word-blue'>Post</span>.create(params.<span class="word-red">require</span>(<span class='word-purple'>:post</span>).permit(<span class='word-purple'>:name</span>, <span class='word-purple'>:content</span>, <span class='word-purple'>:place</span>))</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        この「params」の部分に、<u>送られてきたデータが全て集約されます。</u>この「params」に「nameは'山田太郎'、contentは'春からSFC'、placeは'江ノ島'」のような情報が入ります。
        <br>
        そしてこのデータベースの内容以外は変更させないために、<u>「require」と「permit」を設定しています。</u>
        <br><br>
        こうして設定したデータベースの内容だけを「作成（create）」するような設定になっています。
        <br><br>
        <i class="fa fa-play-circle color-red"></i>　<strong>「データの変更（update）」も同じです。</strong>
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line small-code'>@post.update(params.<span class="word-red">require</span>(<span class='word-purple'>:post</span>).permit(<span class='word-purple'>:content</span>, <span class='word-purple'>:place</span>))</span>
</td>
</tr>
</table>
        <br>
        この設定では「データの変更」の「update」が使われているので、
        <br>
        <strong>「@post」</strong>を「<u>params（受け取った内容のうち、「posts」データベースの「content」と「place」）</u>」に<strong>「変更（update）」</strong>するデータ操作になります。
        <br><br>
        <i class="fa fa-question-circle color-green"></i><strong>　「編集するデータの記入（edit）」するページから受け取った、<u>「books」データベースの「name」「price」「page」の「データの変更（update）」</u>をするページのデータ操作はどのようになるでしょう？</strong>
        <br><br>
        <textarea class="input-code form-control" placeholder="答えを入力して下さい" rows="5"></textarea>
        <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
</td>
<td class='code-content answer-code'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>update</span></span>
<span class='code-line'>    @book = <span class='word-blue'>Book</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line'>    @book.update(params.<span class="word-red">require</span>(<span class='word-purple'>:book</span>).permit(<span class='word-purple'>:name</span>, <span class='word-purple'>:price</span>, <span class='word-purple'>:page</span>))</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <hr class="red-hr">
        データ操作はここまでなので、<strong><u>ページの設定をやってみましょう！</u></strong>
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_update_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_update_1.png",
                    :target => ["_blank"] %>
        編集するデータの入力が終わったら、このようなページを表示させましょう！
        <br><br>
        まずは、Sublime Textで開いた「myapp」で<strong>「<i>app > views > posts</i>」</strong>を開いてみましょう。
        <br>
        その中に<strong>「<u>update.html.erb</u>」</strong>ファイルはあるでしょうか？あったら開きましょう！
        <br><br>
        <strong>このファイルに「編集するデータの入力」でボタンを押した後に表示されるページの設定をします。</strong>
        <br><br>
        では、この「update.html.erb」を下のように変更してみましょう！
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　update.html.erb</strong>
        <br>
        <small>※　半角英数字で入力。変更が完了したら「Command」と「s」を一緒に押して内容を保存して下さい。</small>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を変更しました。&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.name %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.content %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.place %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        <i class="fa fa-question-circle color-green"></i>　<strong>ここではなにを設定しているでしょうか？</strong>
        <br><br>
        ここでは変更した後のデータを表示させています。
        <br>
        詳しい説明は、<a href="/pages/5#title1-1" target="_blank"><strong>「一つのデータの表示（show）」</strong></a>するページや、<a href="/pages/6#title1-4" target="_blank"><strong>「データの作成（create）」</strong></a>するページなどを参考にして下さい。
        <hr class="red-hr">
        では、ページを表示させてみましょう！
        <br>
        <small>※　一回、「rails s」で動かしたサーバーを「Command」と「c」を一緒に押して止めてから、もう一度「rails s」を入力して下さい。これで内容の変更が適用されます。
        </small>
        <br><br>
        できたらブラウザで、「<a href="http://localhost:3000/posts/edit/1" target="_blank"><strong>localhost:3000/posts/1/edit</strong></a>」を開いてみましょう！
        <br>
        開けたら好きな情報を入力して、「変更する」ボタンを押しましょう！
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_update_1.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_update_1.png",
                    :target => ["_blank"] %>
        上のようなページは表示されたでしょうか？
        <br>
        出てきたら<a href="/pages/how_to_open" target="_blank"><strong>Sequel Pro</strong></a>を見るなり、「<a href="http://localhost:3000/posts/1"><strong>localhost:3000/posts/1</strong></a>」を見るなりして、内容が変更されたかを確認してみましょう！
        <hr>
        <p id="title1-6-2"><i class="fa fa-tags color-red"></i>　<strong>⑵ : まとめ</strong></p>
        <strong>「データの変更（update）」</strong>をするページの３つの設定をまとめる。
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>７つのページの設定</strong>
        <br><br>
        <strong>「config」フォルダの中にある「route.rb」ファイルに「<u>update</u>」を設定する</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line remarkable-code'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>データ操作の設定</strong>
        <br><br>
        <strong>「app > controllers」フォルダにある「データベース名_controller」ファイルの「<u>update</u>」を設定する</strong>
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>update</span></span>
<span class='code-line'>    @post = <span class='word-blue'>Post</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line'>    @post.update(params.<span class="word-red">require</span>(<span class='word-purple'>:post</span>).permit(<span class='word-purple'>:content</span>, <span class='word-purple'>:place</span>))</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        <strong><u>変更するデータを選択してから、データを変更する「update」の中にデータベースの指定（require）と枠組みの指定（permit）</u>を設定する</strong>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>ページ設定</strong>
        <br><br>
        <strong>「app > views」フォルダ内にある「データベース名」のファルダの中にある、「<u>update.html.erb</u>」に内容を設定していく。</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>update.html.erb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を変更しました。&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;名前&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.name %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;内容&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.content %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;場所&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;%= @post.place %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        <strong><u>なにも書かなくてもデータの変更は行えますが、使う人にとって不便なのでちゃんと設定しましょう！</u></strong>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i><strong>　ブラウザでの表示</strong>
        <br><br>
        <strong>「データの変更（update）」をするページは「編集するデータの記入（edit）」のボタンを押して移動してくるページなので、URLを記入する必要はありません。</strong>
        <br>
        <small>※　ページのURLは、「localhost:3000/posts/idの番号」になっていると思います。</small>
        <hr class="red-hr">
        ここまででデータの変更もできました。お疲れさまです。
        <br>
        <strong>残すのもデータの削除だけになりますので、頑張りましょう！</strong>
        <hr>
        </h4>
        <h4>
          <p id="title1-7"><i class="fa fa-tags color-red"></i>　<strong class="remarkable">⑦ : データの削除をする（destroy）</strong></p>
          <br>
          もうデータの操作をするページの説明も最後になります。
          <br>
          <strong><u>最後に「データの削除（destroy）」について説明したいと思います。</u></strong>
          <br><br>
          基本的には、「<a href="/pages/4#title2-3" target="_blank"><strong>rails c</strong></a>」でやった
          <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line small-code'>Post.find(3).destroy</span>
</td>
</tr>
</table>
        <br>
        を設定する感じだと思えば分かりやすいと思います。
        <hr class="red-hr">
        流れとしては、
        <br>
        下のように「１つのデータを表示（show）」するページに<strong>「投稿を削除」するページに移動する文字列を加え、</strong>
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_add_destroy.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_add_destroy.png",
                    :target => ["_blank"] %>
        クリックしてページを移動すると、下のような「削除が完了」したページに移動します。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_destroy.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_destroy.png",
                    :target => ["_blank"] %>
        「データの全表示（index）」をするページで確認すると、下のようにデータがなくなります。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_all_after_destroy.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_all_after_destroy.png",
                    :target => ["_blank"] %>
        このような流れなので、
        <br><br>
        <strong>
        <ul class="number_ul">
          <li>データ削除のページへ移動する文字列の追加</li>
          <li>データ削除のデータ操作</li>
          <li>データ削除完了のページの設定</li>
        </ul>
        </strong>
        をやっていきます。
        <br>
        では、このデータの削除をやってみましょう！
        <hr>
        <p id="title1-7-1"><i class="fa fa-check-square color-red"></i><strong>　⑴ : ページを設定する</strong></p>
        <br>
        ページの設定をするにはなにをすればいいのか、もうそろそろ覚えたのではないでしょうか？
        <br><br>
        <strong>
        <ul class="number_ul">
          <li>７つのページの設定</li>
          <li>データ操作の設定</li>
          <li>ページの設定</li>
        </ul>
        </strong>
        の３つですね。
        <hr class="red-hr">
        それでは<strong>「７つのページのうち、どのページを使うか」</strong>の設定から始めましょう！
        <br>
          ７つのページのうちどのページを使うかを決める<strong>「<u>route.rb</u>」ファイル</strong>（configフォルダに入っている）を見てみましょう。
                 <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple remarkable-code'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        内容は前に変更しましたよね。
        <br><br>
        <strong><u>上のように３行目に「destroy」は追加されていますか？</u></strong>
        <br>
        追加されていれば「データの削除（destroy）」をするページを使うことを設定できています。
        <hr class="red-hr">
        では、「<u>データ操作</u>」の設定をしましょう。データ操作は「データベース名_controller.rb」ファイルで設定します。
        <br>
        <strong>「posts」データベースのデータ操作を設定する「posts_controller.rb」ファイルから設定を始めましょう。</strong>
        <br><br>
        まずは「app」フォルダの中にある「controllers」フォルダから、「<strong>posts_controller.rb</strong>」を開きましょう。（Sublime Textの開き方は<a href="/pages/how_to_open" target="_blank"><strong>こちら</strong></a>）
        <br><br>
        開けたら、<u>「def destroy」と「end」の間</u>を下のように設定しましょう。
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb（29、30行目を追加）</strong>
        <br>
        <small>※　半角英数字で入力。変更が完了したら「Command」と「s」を一緒に押して内容を保存して下さい。</small>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>28
29
30
31
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>destroy</span></span>
<span class='code-line remarkable-code'>    @post = <span class='word-blue'>Post</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line remarkable-code'>    @post.destroy</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        この内容はなんとなく理解できるのではないでしょうか？
        <br>
        まず、
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>29
</td>
<td class='code-content'><span class='code-line'>    @post = <span class='word-blue'>Post</span>.find(params[<span class='word-purple'>:id</span>])</span>
</td>
</tr>
</table>
        <br>
        で削除するデータを選択して（<a href="/pages/5#title1-1" target="_blank">show</a>、<a href="/pages/6#title1-5" target="_blank">edit</a>を参照）、それを削除しています。
        <br><br>
        実は下のように１行で書くこともできます
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>destroy</span></span>
<span class='code-line'>    <span class='word-blue'>Post</span>.find(params[<span class='word-purple'>:id</span>]).destroy</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        <strong><u>が、ページに削除したデータを表示させるので「@post」で一回標識を設定しました。</u></strong>
        <br><br>
        <i class="fa fa-question-circle color-green"></i><strong>　「tweets」データベースの削除を行うデータ操作はどのように設定すればいいでしょうか？</strong>
        <br><br>
        <textarea class="input-code form-control" placeholder="答えを入力して下さい" rows="4"></textarea>
        <br>
        <i class="fa fa-file color-red"></i><strong>　tweets_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
</td>
<td class='code-content answer-code'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>destroy</span></span>
<span class='code-line'>    @tweet = <span class='word-blue'>Tweet</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line'>    @tweet.destroy</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <hr class="red-hr">
        では、ページの設定をしてみましょう！
        <br><br>
        まずはクリックしたらデータ削除のページに移動する「データを削除する」を、下のようにページに設定してみたいと思います。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_add_destroy.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_add_destroy.png",
                    :target => ["_blank"] %>
        <u>「１つのデータの表示」をするページ「show.html.erb」</u>にこの設定を追加します。
        <br>
        まずは、Sublime Textで開いた「myapp」で<strong>「<i>app > views > posts</i>」</strong>を開いてみましょう。
        <br>
        そこから<strong>「<u>show.html.erb</u>」</strong>を選択して開いてみましょう！
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　show.html.erb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;&lt;%= @post.name %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;&lt;%= @post.content %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;&lt;%= @post.place %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        だいたいこんな内容になっているでしょうか？
        <br><br>
        では、ここにデータの削除をする設定を加えましょう！
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>show.html.erb（6行目を追加）</strong>
        <br>
        <small>※　半角英数字で入力。変更が完了したら「Command」と「s」を一緒に押して内容を保存して下さい。</small>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;&lt;%= @post.name %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;&lt;%= @post.content %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;&lt;%= @post.place %&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line remarkable-code'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts/&lt;%= @post.id %&gt;"</span> <span class="word-green">data-method</span>=<span class="word-yellow">"delete"</span>&gt;投稿を削除する&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        今回加えた行は、「データの全表示（index）」をするページで加えた<a href="/pages/5#title1-2-2" target="_blank"><strong>移動の設定</strong></a>に似ていると思います。
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>index.html.erb</strong>
        <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿一覧&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;% @posts.each do |p| %&gt;</span>
<span class='code-line remarkable-code'>  &lt;<span class='word-red'>p</span>&gt;&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts/&lt;%= p.id %&gt;"</span>&gt;&lt;%= p.id %&gt;&lt;/<span class='word-red'>a</span>&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;&lt;%= p.name %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>p</span>&gt;&lt;%= p.content %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>  &lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;% end %&gt;</span>
</td>
</tr>
</table>
        <br>
        <u>違っているのは中の文字列と<strong>「data-method="delete"」</strong></u>が加わったことですね。
        <br><br>
        削除をするページへの移動は後ろに<strong><u>「data-method="delete"」</u></strong>を加えて、
<pre>
&lt;a href="データベース名/選択するid" data-method="delete"&gt;内容&lt;/a&gt;
</pre>
        で設定します。
        <br><br>
        今回の「選択するid」は、データ操作で設定した
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb</strong>
        <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>3
4
5
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>show</span></span>
<span class='code-line remarkable-code'>    @post = <span class='word-blue'>Post</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        「@post」から
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>show.html.erb</strong>
        <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts/<span class="remarkable-code">&lt;%= @post.id %&gt;</span>"</span> <span class="word-green">data-method</span>=<span class="word-yellow">"delete"</span>&gt;投稿を削除する&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        「@post.id」で「id」をとってきています。
        <br><br>
        <strong>これで「データの削除（destroy）」をするページへの移動ができるようになりました！</strong>
        <br><br>
        <i class="fa fa-question-circle color-green"></i>　<strong><u>「songs」データベースの「idが100」のデータを削除するページに移動する「削除」の文字</u>はどのように設定すればいいでしょうか？</strong>
        <br><br>
        <input type="input" class="input-code form-control" placeholder="答えを入力して下さい">
        <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content answer-code'><span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/songs/100"</span> <span class="word-green">data-method</span>=<span class="word-yellow">"delete"</span>&gt;削除&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <hr class="red-hr">
        では、削除が完了した後のページを設定しましょう！
        <br>
        「投稿を削除する」ボタンを押したら、下のようなページが出るようにします。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_destroy.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_destroy.png",
                    :target => ["_blank"] %>
        まずは、Sublime Textで開いた「myapp」で<strong>「app > views > posts」</strong>を開いてみましょう。
        <br>
        この中にある<strong>「<u>destroy.html.erb</u>」</strong>が、「データの削除（destroy）」の終わった後に表示されるページになります。
        <br><br>
        では、中身を設定してみましょう！
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>destroy.html.erb</strong>
        <br>
        <small>※　半角英数字で入力。変更が完了したら「Command」と「s」を一緒に押して内容を保存して下さい。</small>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を削除しました&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;名前：&lt;%= @post.name %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;内容：&lt;%= @post.content %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;場所：&lt;%= @post.place %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        今までの設定の方法とは少し違いますが、内容は理解できるのではないかと思います。こっちのほうが綺麗に表示できているのではないかと思います。
        <br><br>
        内容に関して言うと、
        <br>
        <strong>データ操作の部分で選択した「@post」を表示させています。</strong>
        <br>
        細かい内容に関しては、「<a href="/pages/5#title1-1-3" target="_blank"><strong>show</strong></a>」「<a href="/pages/6#title1-4" target="_blank"><strong>create</strong></a>」「<a href="/pages/6#title1-6" target="_blank"><strong>update</strong></a>」らへんを参考にしてみて下さい。
        <br><br>
        <strong>このページは作らなくても大丈夫ですが、<u class="little-remarkable">作らないと不親切</u>なので忘れずに設定しましょう！</strong>
        <hr class="red-hr">
        では、実際にページでデータを削除しましょう！
        <br>
        一回、「<u>rails s</u>」で動かしたサーバーを<u>「Command」と「c」を一緒に押して止めて</u>から、もう一度「<u>rails s</u>」を入力して下さい。
        <br>
        これで内容の変更が適用されます。
        <br><br>
        できたらブラウザで削除したいデータを表示させている「show」ページに移動しましょう。
        <br><br>
        <i class="fa fa-question-circle color-green"></i>　<strong>「posts」データベースの「idが3」のデータのページはブラウザでどのように入力すれば出てくるでしょうか？</strong>
        <br><br>
        <input type="input" class="input-code form-control" placeholder="答えを入力して下さい">
        <br>
        <i class="fa fa-chrome color-red"></i>　<strong>ブラウザ</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content answer-code'><span class='code-line small-code'>localhost:3000/posts/3</span>
</td>
</tr>
</table>
        <br>
        削除したいデータのページには移動できたでしょうか？
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_add_destroy.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_add_destroy.png",
                    :target => ["_blank"] %>
        設定した「投稿を削除する」は追加されているでしょうか？
        <br><br>
        設定ができていたら、「投稿を削除する」をクリックしてみましょう！下のようなページは表示されたでしょうか？
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_destroy.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_1_destroy.png",
                    :target => ["_blank"] %>
        できたら「<strong><a href="http://localhost:3000/posts" target="_blank">データの全表示（index）</a></strong>」をするページに行くか、<a href="/pages/how_to_open#title2" target="_blank"><strong>Sequel Pro</strong></a>でデータが削除されたかを確認しましょう！
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_all_after_destroy.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page6/Chrome_posts_all_after_destroy.png",
                    :target => "_blank" %>
        <br>
        <strong>
        データの削除は終わったでしょうか？
        </strong>
        <hr>
        <p id="title1-7-2"><i class="fa fa-check-square color-red"></i>　<strong>⑵ : まとめ</strong></p>
        <strong>「データの削除（destroy）」</strong>をするページの３つの設定をまとめる。
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>７つのページの設定</strong>
        <br><br>
        <strong>「config」フォルダの中にある「route.rb」ファイルに「<u>destroy</u>」を設定する</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line remarkable-code'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>データ操作の設定</strong>
        <br><br>
        <strong>「app > controllers」フォルダにある「データベース名_controller」ファイルの「<u>destroy</u>」を設定する</strong>
        <br><br>
        <i class="fa fa-file color-red"></i><strong>　posts_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
</td>
<td class='code-content'><span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>destroy</span></span>
<span class='code-line'>    @post = <span class='word-blue'>Post</span>.find(params[<span class='word-purple'>:id</span>])</span>
<span class='code-line'>    @post.destroy</span>
<span class='code-line'>  <span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <br>
        <strong><u>削除するデータを選択して、それを「.destroy」する</u></strong>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>ページ設定</strong>
        <br><br>
        <strong>「app > views」フォルダ内にある「データベース名」のファルダの中にある、「<u>destroy.html.erb</u>」に内容を設定していく。</strong>
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>destroy.html.erb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>h1</span>&gt;投稿を削除しました&lt;/<span class='word-red'>h1</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;名前：&lt;%= @post.name %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;内容：&lt;%= @post.content %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>p</span>&gt;場所：&lt;%= @post.place %&gt;&lt;/<span class='word-red'>p</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>hr</span>&gt;</span>
<span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts"</span>&gt;トップに戻る&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        ページの内容はなんでもいいんですが、<strong><u>なにも書かないと不親切なんで</u></strong>トップページに戻れるくらいにはしましょう。
        <br><br>
        <i class="fa fa-play-circle"></i>　<strong>ブラウザでの表示</strong>
        <br><br>
        このページへの移動は
        <br><br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>&lt;<span class='word-red'>a </span><span class='word-green'>href</span>=<span class='word-yellow'>"/posts/&lt;%= @post.id %&gt;"</span> <span class="word-green">data-method</span>=<span class="word-yellow">"delete"</span>&gt;投稿を削除する&lt;/<span class='word-red'>a</span>&gt;</span>
</td>
</tr>
</table>
        <br>
        のように、
<pre>
&lt;a href="データベース名/選択するid" data-method="delete"&gt;内容&lt;/a&gt;
</pre>
        で設定します。
        <hr class="red-hr">
        ここまでお疲れ様でした。最後にまとめをします。
        </h4>
        <br>
        <h2 class="textbook-section-title" id="title2"><strong>2 : まとめ</strong></h2>
        <h4>
          Ruby on Railsで作ることができるページは、<strong><u>データの操作の方法にそって７つある。</u></strong>
          <br><br>
          <ul class="number_ul">
          <strong><li>データの全表示　　　　　<u>index</u></li></strong>
          <small>例：タイムライン<br>→<strong>「<i>Post.all</i>」</strong>を裏で設定</small>
          <strong><li>一つのデータの表示　　　<u>show</u></li></strong>
          <small>例：一つのツイート<br>→<strong>「<i>Post.find(idの数字)</i>」</strong>を裏で設定</small>
          <strong><li>新しいデータの記入　　　<u>new</u></li></strong>
          <strong><li>データの作成　　　　　　<u>create</u></li></strong>
          <small>例：ツイートする画面<br>→<strong>「<i>Post.create(いろいろ)</i>」</strong>を裏で設定</small>
          <strong><li>編集するデータの記入　　<u>edit</u></li></strong>
          <strong><li>データの変更　　　　　　<u>update</u></li></strong>
          <small>例：プロフィールを変更する画面<br>→<strong>「<i>Post.find(idの数字).update(いろいろ)</i>」</strong>を裏で設定</small>
          <strong><li>データの削除　　　　　　<u>destroy</u></li></strong>
          <small>例：ツイートを削除する画面<br>→<strong>「<i>Post.find(idの数字).destroy</i>」</strong>を裏で設定</small>
        </ul>
        <hr class="red-hr">
        それぞれのページを表示させるには、
        <br><br>
        <ul class="number_ul">
          <strong><li>７つのページのうちどれを使うかを設定</li></strong>
          <small>「config > route.rb」で設定</small>
          <strong><li>データ操作の設定</li></strong>
          <small>「app > controllers」の中にある「データベース名_controller.rb」ファイルで設定</small>
          <strong><li>ページの設定</li></strong>
          <small>「 app > views > データベース名」の中に、htmlファイルを作って設定</small>
        </ul>
        <br>
        を設定する。
        <br>
        それぞれの設定について説明する
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i><strong>　７つのページのうちどれを使うかを設定（route.rb）</strong>
        <br><br>
        <strong>「config」フォルダの中にある「route.rb」ファイルに設定する</strong>
        <br><br>
        ページを作りたいデータベースに応じた設定をする。
        <br><br>
        <i class="fa fa-file color-red"></i>　<strong>route.rb（例：3行目）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
...
57
58
</td>
<td class='code-content'><span class='code-line'><span class='word-blue'>Rails</span>.application.routes.draw<span class='word-red'> do</span></span>
<span class='code-line'></span>
<span class='code-line remarkable-code'>  resources <span class='word-purple'>:posts</span> , <span class='word-purple'>:only</span> => [<span class='word-purple'>:show</span>, <span class='word-purple'>:index</span>, <span class='word-purple'>:new</span>, <span class='word-purple'>:create</span>, <span class='word-purple'>:edit</span>, <span class='word-purple'>:update</span>, <span class='word-purple'>:destroy</span>]</span>
<span class='code-line'>  <span class='word-gray'># The priority is based upon order of creation: first created -> highest priority.</span></span>
<span class='code-line'>  <span class='word-gray'># See how all your routes lay out with "rake routes".</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># You can have the root of your site routed with "root"</span></span>
<span class='code-line'>  <span class='word-gray'># root 'welcome#index'</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-gray'># 省略</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
        <hr class="red-hr">
        <i class="fa fa-play-circle"></i>　<strong>データ操作の設定/ページの設定</strong>
        <br><br>
        データ操作とページの設定をするには、設定をするためのファイルとフォルダを作る必要がある。
        <br>
        それをするにはターミナルで、
        <br><br>
        <strong>　ターミナル</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line small-code'>rails g controller データベース名</span>
</td>
</tr>
</table>
        <br>
        を入力する。
        <%= link_to image_tag("https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page5/Terminal_rails_g_controller_posts.png",
                              :width => "90%",
                              :class => "hover_img textbook-title-img"),
                    "https://s3.amazonaws.com/rails-textbook/rails_for_sfc/images/page5/Terminal_rails_g_controller_posts.png",
                    :target => ["_blank"] %>
        このような表示が出て来れば問題ない。
        <hr class="red-hr">
        これで生成された
        <br><br>
        <ul class="number_ul">
        <strong><li>「app > controllers > データベース名_controller.rb」にデータ操作</li></strong>
        <br>
        <strong><li>「app > views」フォルダにページの内容</li></strong>
        </ul>
        <br>
        をそれぞれ設定することでページ表示の設定をする。
        <br>
        内容を加える前に設定する必要があることをまとめる。
        <br><br>
        <ul class="number_ul">
          <strong class="little-remarkable"><li>データ操作</li></strong>
            <strong>「app > controllers > データベース名_controller.rb」</strong>に使うページの分だけ、下のように設定を加える。
            <br><br>
        <i class="fa fa-file color-red"></i>　<strong>posts_controller.rb</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</td>
<td class='code-content'><span class='code-line'><span class='word-red'>class </span>PostsController <span class="word-green">< ApplicationController</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>show</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>index</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>new</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>create</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>edit</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>update</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
<span class='code-line'></span>
<span class='code-line'>  <span class='word-red'>def </span><span class='word-green'>destroy</span></span>
<span class='code-line'>  <span class='word-red'>end</span></span>
<span class='code-line'></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
          <br>
          <strong class="little-remarkable"><li>ページ</li></strong>
          <strong>「app > views > データベース名」</strong>に使うページの分だけ、下のファイルを作る。（ファイルの保存の方法は<a href="/pages/how_to_save" target="_blank"><strong>こちら</strong></a>）
          <br>
          <br>
          <ul class="number_ul">
          <strong>
            <li>「show.html.erb」（１つのデータを表示するページ）</li>
            <li>「index.html.erb」（データの全表示をするページ）</li>
            <li>「new.html.erb」（新しいデータの記入をするページ）</li>
            <li>「create.html.erb」（データの作成）</li>
            <li>「edit.html.erb」（編集するデータの記入をするページ）</li>
            <li>「update.html.erb」（データを変更するページ）</li>
            <li>「destroy.html.erb」（データの削除をするページ）</li>
          </strong>
          </ul>
        </ul>
        <hr class="red-hr">
        <strong>この「データベース名_controller.rb」にそれぞれのデータ操作を、それぞれのhtmlファイルに内容を付け加えていく。</strong>
        <br><br>
        <div class="list-group">
          <a href="/pages/5#title1-1" class="list-group-item" target="_blank"><strong>show</strong></a>
          <a href="/pages/5#title1-2" class="list-group-item" target="_blank"><strong>index</strong></a>
          <a href="/pages/6#title1-3" class="list-group-item" target="_blank"><strong>new</strong></a>
          <a href="/pages/6#title1-4" class="list-group-item" target="_blank"><strong>create</strong></a>
          <a href="/pages/6#title1-5" class="list-group-item" target="_blank"><strong>edit</strong></a>
          <a href="/pages/6#title1-6" class="list-group-item" target="_blank"><strong>update</strong></a>
          <a href="/pages/6#title1-7" class="list-group-item" target="_blank"><strong>destroy</strong></a>
        </div>
        </li>
        <hr>
        <i class="fa fa-star color-blue"></i>　<strong>ここまででRuby on Railsで作るページの説明は終了です。これで簡単なページはできるようになったのではないでしょうか？<br><br>でも今のままではすごくダサいんで、次は「css」ファイルを設定してページを綺麗にしましょう！</strong>
        </h4>
        <div class="next-page">
            <a href="/pages/7" class="btn btn-primary">次の章に進む</a>
          </div>
          <br>
      </div>
    </div>
  </div>
  <div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 hidden-xs">
    <br>
    <div id="slide-bar" class="clear-fix">
      <strong>
        <div class="list-group nomargin">
          <a href="#title" class="list-group-item list-title"><h4>ページを作ろう！②</h4></a>
          <a href="#title1-3" class="list-group-item"><small>　③ : 新しいデータを記入する（new）</small></a>
          <a href="#title1-3-1" class="list-group-item"><small>　　⑴ : ページを設定する</small></a>
          <a href="#title1-3-2" class="list-group-item"><small>　　⑵ : まとめ</small></a>
          <a href="#title1-4" class="list-group-item"><small>　④ : データを作成する（create）</small></a>
          <a href="#title1-4-1" class="list-group-item"><small>　　⑴ : ページを設定する</small></a>
          <a href="#title1-4-2" class="list-group-item"><small>　　⑵ : まとめ</small></a>
          <a href="#title1-5" class="list-group-item"><small>　⑤ : 編集するデータを記入する（edit）</small></a>
          <a href="#title1-5-1" class="list-group-item"><small>　　⑴ : ページの設定</small></a>
          <a href="#title1-5-2" class="list-group-item"><small>　　⑵ : まとめ</small></a>
          <a href="#title1-6" class="list-group-item"><small>　⑥ : データの変更をする（update）</small></a>
          <a href="#title1-6-1" class="list-group-item"><small>　　⑴ : ページを設定する</small></a>
          <a href="#title1-6-2" class="list-group-item"><small>　　⑵ : まとめ</small></a>
          <a href="#title1-7" class="list-group-item"><small>　⑦ : データの削除をする（destroy）</small></a>
          <a href="#title1-7-1" class="list-group-item"><small>　　⑴ : ページを設定する</small></a>
          <a href="#title1-7-2" class="list-group-item"><small>　　⑵ : まとめ</small></a>
          <a href="#title2" class="list-group-item">2 : まとめ</a>
        </div>
      </strong>
    </div>
  </div>
</div>
<%= render 'pages/fixedjs' %>