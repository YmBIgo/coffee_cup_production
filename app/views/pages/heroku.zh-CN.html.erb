<div class="container">
  <div class="row">
    <div class="col-xl-9 col-lg-9 col-md-9 col-sm-9 col-xs-12">
      <div class="textbook-area">
        <div class="textbook-area-inner fadeIn wow">
          <div id="title" class="textbook-title">
            <h1><strong>公开网站(Mac)</strong></h1>
          </div>
          <%= image_tag "https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/header/header9.jpg",
                        :width => "90%",
                        :class => "textbook-title-img hover_img" %>
          <hr>
          <h2 class="textbook-section-title" id="title0"><strong>0 : 这个章的目的</strong></h2>
          <h4>
            <i class="fa fa-star color-red"></i>　<strong>在这个章，解释使用Mac 公開 Ruby on Rails 作的网站的方法。</strong>
            <hr>
            网站的公开要使用
            <strong>
            <ul class="number_ul">
              <li><u>git</u></li>
              <li><u><a href="https://www.heroku.com" target="_blank">heroku</a></u></li>
            </ul>
            </strong>
            这个两个工具。
            <hr class="red-hr">
            首先使用 git 的工具保存 Ruby on Rails 的设定文件的编辑履历，之后使用 heroku 公开网站。
            <br><br>
            那么开始做吧！
          </h4>
          <br>
          <h2 class="textbook-section-title" id="title1"><strong>1 : 导入 git</strong></h2>
          <h4>
            <strong>刚开始安装 <u>git</u> 的工具吧！</strong>
            <br><br>
            在terminal打入下面的命令吧。
            <br><br>
            <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>brew install git</span>
</td>
</tr>
</table>
            <br>
            这样 git 的安裝完成了。
            <br><br>
            安裝完了之后，打入下面的命令设定 git 吧。
            <br><br>
            <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
</td>
<td class='code-content'><span class='code-line'>git config -global user.name "自己的名字"</span>
<span class='code-line'>git config -global user.email "自己的信箱"</span>
</td>
</tr>
</table>
          <br>
          到这里设定好git了。
          <br>
          打入下面的命令，看看有沒有出现git的版本。
          <br><br>
          <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>git --version</span>
</td>
</tr>
</table>
          <br>
          <strong>使用这个git，在heroku上公开网站。</strong>
          </h4>
          <br>
          <h2 class="textbook-section-title" id="title2"><strong>2 : heroku</strong></h2>
          <h4>
            <strong>那么使用这个heroku，公开网站吧！</strong>
            <hr>
            <p id="title2-1"><i class="fa fa-tags color-red"></i>　<strong class="remarkable">① : 登录 heroku</strong></p>
            <br>
            首先登录heroku吧。
            在<a href="https://signup.heroku.com" target="_blank"><strong>heroku 的登录网页</strong></a>打入需要的资料，点击<strong>「<u>create free acount</u>」</strong>吧。
            <%= link_to image_tag("https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/heroku_signup.png",
                                  :width => "90%",
                                  :class => "hover_img textbook-title-img"),
                        "https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/heroku_signup.png",
                        :target => ["_blank"] %>
            登录完了之后会送來检证的電子邮件，看看內容之后做检证吧。
            <br>
            在检证的网页需要打入密码，设定自己喜欢的密码吧。
            <br><br>
            到这里设定好密码了。从<a href="https://id.heroku.com/login" target="_blank"><strong>heroku登录网页</strong></a>，试试可以登录。
            <%= link_to image_tag("https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/heroku_login.png",
                                  :width => "90%",
                                  :class => "hover_img textbook-title-img"),
                        "https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/heroku_login.png",
                        :target => ["_blank"] %>
            <strong>登录好了吗？</strong>
            <br><br>
            接着安裝，在terminal上动 heroku 的工具<strong>「<u>Heroku Toolbelt</u>」</strong>吧。
            <hr>
            <p id="title2-2"><i class="fa fa-tags color-red"></i>　<strong class="remarkable">② : 安裝 Heroku Toolbelt</strong></p>
            <br>
            <strong>接着安裝，在terminal上动heroku的工具吧。</strong>
            <br><br>
            从<a href="https://devcenter.heroku.com/articles/getting-started-with-ruby#set-up" target="_blank"><strong>这个网页</strong></a>选择<strong>「Mac OS X」</strong>，开始下载吧。
            <%= link_to image_tag("https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/heroku_toolbelt_web.png",
                                  :width => "90%",
                                  :class => "hover_img textbook-title-img"),
                        "https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/heroku_toolbelt_web.png",
                        :target => ["_blank"] %>
            下载之后，打开下载好的文件吧。
            <br>
            刚开始会出现下面一样的画面。
            <%= link_to image_tag("https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/heroku_toolbelt_1.png",
                                  :width => "90%",
                                  :class => "hover_img textbook-title-img"),
                        "https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/heroku_toolbelt_1.png",
                        :target => ["_blank"] %>
            点击「continue」之后，
            <%= link_to image_tag("https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/heroku_toolbelt_2.png",
                                  :width => "90%",
                                  :class => "hover_img textbook-title-img"),
                        "https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/heroku_toolbelt_2.png",
                        :target => ["_blank"] %>
            会出现上面图像一样的画面，继续下载吧。
            <br>
            最后出现<strong>「<u>安裝完成了</u>」</strong>的显示的话OK。
            <hr class="red-hr">
            <i class="fa fa-arrow-right"></i>　<strong>安裝好 Heroku Toolbelt 了，现在可以在terminal上动heroku了。</strong>
            <br><br>
            首先在terminal上，登录 heroku 吧。
            <br>
            移动到想公开的网站的文件夾吧。
            <br><br>
            <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
2
3
</td>
<td class='code-content'><span class='code-line'>cd Desktop</span>
<span class='code-line'>cd rails_project</span>
<span class='code-line'>cd 作的网页(myapp, message-app 等等)</span>
</td>
</tr>
</table>
            <br>
            移动之后，打入下面的打入吧。
            <br><br>
            <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>heroku login</span>
</td>
</tr>
</table>
            <br>
            打入之后会要求打入信箱跟密码，打入自己的帐号资料吧。
            <br>
            <small>※　密码不会在画面上显示</small>
            <br><br>
            登录成功了话，会显示<strong>「<u>Authentication successful.</u>」</strong>的文字。
            <br><br>
            <i class="fa fa-arrow-right"></i>　<strong>到这里设定好heroku的设定了，接着公开网站吧！</strong>
            <hr>
            <p id="title2-3"><i class="fa fa-tags color-red"></i>　<strong class="remarkable">③ : 用 Heroku 公开网站</strong></p>
            <br>
            <strong>heroku 的设定好了，接着公开网页吧！</strong>
            <br><br>
            在 heroku 公开网站要设定，
            <strong>
            <ul class="number_ul">
              <li>Rails 的网页的设定</li>
              <li>git 的设定</li>
              <li>heroku 的设定</li>
            </ul>
            </strong>
            这个三个內容。
            <br>
            那么，一个一个做做看吧。
            <hr>
              <p id="title2-3-1" class="fix-link-nav"><i class="fa fa-check-square color-red"></i>　<strong>⑴ : Rails 的网页的设定</strong></p>
              <br>
              使用 heroku 公开网站的时候，需要编辑<strong><u>Gemfile</u></strong>文件的內容。Gemfile 上追加下面的內容吧。
              <br><br>
              <i class="fa fa-file color-red"></i>　<strong>Gemfile（在最下面行追加下面的內容）</strong>
              <br>
              <small>
              ※　<strong><u>用半母字母数字打入</u></strong>。编辑好了之后，一起点击<strong><u>「Command」跟「s」</u></strong>保存內容。
              </small>
              <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>54
55
56
57
</td>
<td class='code-content'><span class='code-line'>group <span class='word-purple'>:production</span><span class='word-red'> do</span></span>
<span class='code-line'>  <span class='word-red'>gem </span><span class='word-yellow'>'rails_12factor'</span></span>
<span class='code-line'>  <span class='word-red'>gem </span><span class='word-yellow'>'pg'</span></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
              <br>
              在里面的<strong>「group :production do」</strong>在设定，在公开的网站（运用环境）使用的<strong>「<a href="/zh-CN/mugcups/3#title2-2-1">gem</a>」</strong>。
              <br><br>
              文件上设定的在公开的网站（运用环境）使用的 gem 是
              <strong>
              <ul class="number_ul">
                <li>rails_12factor（在 heroku 上使用<u>CSS文件或者图像文件</u>的设定）</li>
                <li>pg（在 heroku 上使用<u>资料库PostgreSQL</u>的设定）</li>
              </ul>
              </strong>
              这个两个设定。
              <br>
              为了使用这个「PostgreSQL」，打入下面的命令吧。
              <br><br>
              <strong>　terminal（用半母字母数字打入）</strong>
              <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>brew install postgresql</span>
</td>
</tr>
</table>
              <br>
              <small>※　已经使用这个命令安裝好 postgreSQL 了，下次就不用打入这个命令了。</small>
              <hr class="red-hr">
              那么最后为了反映设定，在terminal上打入下面的命令吧。
              <br><br>
              <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>bundle install</span>
</td>
</tr>
</table>
              <br>
              <small>
                <i class="fa fa-arrow-right"></i>　不动的话，删除<strong>「Gemfile.lock」</strong>之后再试试看吧。
              </small>
              <br><br>
              到这里做好「Gemfile」的设定了。
              <hr>
              <p id="title2-3-2" class="fix-link-nav"><i class="fa fa-check-square color-red"></i>　<strong>⑵ : git 的设定</strong></p>
              <br>
              接着做git的设定吧。
              <br>
              <strong>git 是保存文件的编辑履历的工具</strong>。使用这个git，在heroku上公开网站。
              <br><br>
              首先，在公开的网站的文件夾（「myapp」「message-app」等等）上设定使用 git 吧。
              <br>
              要公开的 Rails 的网站的文件夾上打入下面的命令吧。
              <br><br>
              <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>git init</span>
</td>
</tr>
</table>
              <br>
              这样做好，在 Rails 的网站上使用 git 的设定了。
              <br>
              在这里保存文件的编辑履历。打入下面的命令吧。
              <br><br>
              <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>git add .</span>
</td>
</tr>
</table>
              <br>
              <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>git commit -am "first commit"</span>
</td>
</tr>
</table>
              <br>
              到这里，保存<strong>「<u>first commit</u>」的名字的编辑文件的履历了。</strong>
              <br>
              接着打入下面的命令吧。
              <br><br>
              <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>git log</span>
</td>
</tr>
</table>
              <br>
              <%= link_to image_tag("https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/git_log.png",
                                    :width => "90%",
                                    :class => "hover_img textbook-title-img"),
                         "https://s3-ap-northeast-1.amazonaws.com/coffee-cup/images/heroku/git_log.png",
                        :target => ["_blank"] %>
              有沒有显示这样的履历吗？用这个命令，显示编辑履历。
              <br>
              确认里面之后，点击<strong>「q」</strong>吧。这样可以回到打入命令的画面。
              <br><br>
              <i class="fa fa-arrow-right"></i>　<strong>编辑文件之后，打入「git add .」「git commit -am "履历的名字"」可以保存文件的编辑履历。</strong>
              <hr class="red-hr">
              <strong>最后在 heroku 公开网站吧！</strong>
              <hr>
              <p id="title2-3-3" class="fix-link-nav"><i class="fa fa-check-square color-red"></i>　<strong>⑶ : heroku 的设定</strong></p>
              <br>
              最后做 heroku 的设定，公开网站吧！
              <br><br>
              <small><i class="fa fa-exclamation color-red"></i>　用 heroku 公开的网站会适用<strong>git上的最新的编辑履历</strong>。<br><strong>「<u>git commit -am "履历的名字"</u>」</strong>的打入完了之后，再做 heroku 上的设定吧。</small>
              <br><br>
              首先，用 heroku 作沒有设定內容的网站。
              <br>
              想公开的 Rails 的网站的文件夾上（「myapp」「message-app」等等），打入下面的命令吧。
              <br><br>
              <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>heroku create</span>
</td>
</tr>
</table>
              <br>
              这样，作好了刚开始沒有內容的网站了。
              <br>
              完了之后，吧 git 保存好的最新的编辑履历适用在网站上吧。打入下面的命令吧。
              <br><br>
              <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>git push heroku master</span>
</td>
</tr>
</table>
              <br>
              这样，在网站上适用git 的最新的编辑履历了。
              <br>
              接着适用，在 Rails 的网站作好的资料库。打入下面的命令吧。
              <br><br>
              <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>heroku run rake db:migrate</span>
</td>
</tr>
</table>
              <br>
              这样设定好，用 Rails 作的网站了。
              <br>
              最后打入下面的命令，可以看作好的网站。
              <br><br>
              <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>heroku open</span>
</td>
</tr>
</table>
              <br>
              作好的网站，有沒有公开了吗？
              <hr>
              <p id="title2-3-4" class="fix-link-nav"><i class="fa fa-check-square color-red"></i>　<strong>⑷ : 总结</strong></p>
              <br>
              最后总结公开网站的方法。
              <hr class="red-hr">
              <ul class="number_ul">
                <strong><li>Gemfile</li></strong>
                  首先在「Gemfile」追加gem的设定。
                  <br><br>
                  <i class="fa fa-file color-red"></i>　<strong>Gemfile（在最下面的行追加內容）</strong>
                  <br>
                  <small>
                  ※　<strong><u>用半母字母数字打入</u></strong>。编辑好了之后，一起点击<strong><u>「Command」跟「s」</u></strong>保存內容。
                  </small>
                  <br>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>54
55
56
57
</td>
<td class='code-content'><span class='code-line'>group <span class='word-purple'>:production</span><span class='word-red'> do</span></span>
<span class='code-line'>  <span class='word-red'>gem </span><span class='word-yellow'>'rails_12factor'</span></span>
<span class='code-line'>  <span class='word-red'>gem </span><span class='word-yellow'>'pg'</span></span>
<span class='code-line'><span class='word-red'>end</span></span>
</td>
</tr>
</table>
                  <br>
                  设定好了之后，适用 gem 的內容。
                  <br><br>
                  <strong>　terminal</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>bundle install</span>
</td>
</tr>
</table>
                  <br>
                  这样，设定好了网站的文件夾上的內容了。
                  <hr class="red-hr">
                <strong><li>git</li></strong>
                  接着，作git的编辑履历。
                  <br>
                  在想公开的网站的文件夾上，作git。
                  <br><br>
                  <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>git init</span>
</td>
</tr>
</table>
                  <br>
                  <small>※　如果在文件夾上设定过的话，不用打入这个命令</small>
                  <br><br>
                  接下，打入下面的命令保存编辑履历。
                  <br><br>
                  <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>git add .</span>
</td>
</tr>
</table>
                  <br>
                  <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>git commit -am "履历的名字"</span>
</td>
</tr>
</table>
                  <br>
                  到这里，做好git的设定了。
                  <hr class="red-hr">
                <strong><li>heroku</li></strong>
                  接着做heroku的设定。
                  <br>
                  打入下面的命令，作 heroku 的网站。
                  <br><br>
                  <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>heroku create</span>
</td>
</tr>
</table>
                  <br>
                  <small>※　在文件夾上有打入过的话，不用打入这个命令</small>
                  <br><br>
                  接着，适用git的最新的编辑履历，
                  <br><br>
                  <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>git push heroku master</span>
</td>
</tr>
</table>
                  <br>
                  适用资料库的设定。
                  <br><br>
                  <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>heroku run rake db:migrate</span>
</td>
</tr>
</table>
                  <br>
                  最後打入下面的命令，看看网站的画面吧！
                  <br><br>
                  <strong>　terminal（用半母字母数字打入）</strong>
<table class='highlight'>
<tr>
<td class='code-line-no text-center'>1
</td>
<td class='code-content'><span class='code-line'>heroku open</span>
</td>
</tr>
</table>
              </ul>
              <br>
              <strong><i class="fa fa-arrow-right"></i>　网站的公开到这里。</strong>
          </h4>
          <hr>
          <div class="next-page">
            <a href="javascript:history.back()" class="btn btn-primary">返回</a>
          </div>
          <br>
        </div>
      </div>
    </div>
    <div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 hidden-xs">
      <br>
      <div id="slide-bar" class="clear-fix">
      <strong>
        <div class="list-group nomargin">
          <a href="#title" class="list-group-item list-title"><h4>公开网站(Mac)</h4></a>
          <a href="#title0" class="list-group-item">0 : 这个章的目的</a>
          <a href="#title1" class="list-group-item">1 : 导入git</a>
          <a href="#title2" class="list-group-item">2 : heroku</a>
          <a href="#title2-1" class="list-group-item">　<small>① : 登录heroku</small></a>
          <a href="#title2-2" class="list-group-item">　<small>② : 安裝 Heroku Toolbelt</small></a>
          <a href="#title2-3" class="list-group-item">　<small>③ : 用 Heroku 公开网站</small></a>
          <a href="#title2-3-1" class="list-group-item">　<small>⑴ : Rails 的网页的设定</small></a>
          <a href="#title2-3-2" class="list-group-item">　<small>⑵ : git 的设定</small></a>
          <a href="#title2-3-3" class="list-group-item">　<small>⑶ : heroku 的设定</small></a>
          <a href="#title2-3-4" class="list-group-item">　<small>⑷ : 总结</small></a>
        </div>
      </strong>
      </div>
    </div>
  </div>
</div>
<%= render 'pages/fixedjs' %>